<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>parent</artifactId>
		<groupId>com.xbniao</groupId>
		<!--这个请替换成最新的稳定版本 -->
		<version>3.0.2.RELEASE</version>
	</parent>
	<artifactId>xbniao-signature-web</artifactId>
	<version>1.0.0</version>
	<properties>
		<!--jvmSettings.agentId 简写项目名称 只能包含 [a-zA-Z0-9], '.', '-', '_' 且不超过13个长度，中间加符号"-" 
			占一位 预留10个长度给到脚本自动追加hostname 做全局唯一标识 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- <jvmSettings.agentId>ske-boot</jvmSettings.agentId> -->
		<!--jvmSettings.agentApplicationName 只能包含 [a-zA-Z0-9], '.', '-', '_'. 最大长度:24 -->
		<!-- <jvmSettings.agentApplicationName>${project.name}</jvmSettings.agentApplicationName> -->
	</properties>

	<profiles>
		<!--JVM的配置注意Java内存墙问题,考虑是后台计算还是实时服务 -->
		<!-- dev -->
		<profile>
			<id>dev</id>
			<properties>
				<env>dev</env>
				<jvmSettings.initialMemorySize>512</jvmSettings.initialMemorySize>
				<jvmSettings.maxMemorySize>512</jvmSettings.maxMemorySize>
				<jvmSettings.minPermSize>-XX:PermSize=128M</jvmSettings.minPermSize>
				<jvmSettings.maxPermSize>-XX:MaxPermSize=256M</jvmSettings.maxPermSize>
				<!-- <jvmSettings.javaagent>-server</jvmSettings.javaagent> -->
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<!-- dev -->
		<profile>
			<id>tst</id>
			<properties>
				<env>tst</env>
				<jvmSettings.initialMemorySize>512</jvmSettings.initialMemorySize>
				<jvmSettings.maxMemorySize>512</jvmSettings.maxMemorySize>
				<jvmSettings.minPermSize>-XX:PermSize=512M</jvmSettings.minPermSize>
				<jvmSettings.maxPermSize>-XX:MaxPermSize=1024M</jvmSettings.maxPermSize>
				<!-- <jvmSettings.javaagent>-server</jvmSettings.javaagent> -->
			</properties>
		</profile>
		<!-- prd -->
		<profile>
			<id>prd</id>
			<properties>
				<env>prd</env>
				<jvmSettings.initialMemorySize>1024</jvmSettings.initialMemorySize>
				<jvmSettings.maxMemorySize>2048</jvmSettings.maxMemorySize>
				<jvmSettings.minPermSize>-XX:PermSize=512M</jvmSettings.minPermSize>
				<jvmSettings.maxPermSize>-XX:MaxPermSize=1024M</jvmSettings.maxPermSize>
				<!-- <jvmSettings.javaagent>-javaagent:/data/app/pinpoint-agent/pinpoint-bootstrap-1.6.2.jar</jvmSettings.javaagent> -->
			</properties>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- mvc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<!-- spring boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- thymeleaf -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>
		<!-- metrics -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-graphite</artifactId>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-jvm</artifactId>
		</dependency>
		<dependency>
			<groupId>com.ryantenney.metrics</groupId>
			<artifactId>metrics-spring</artifactId>
		</dependency>
		<!-- disconf -->
		<dependency>
			<groupId>com.baidu.disconf</groupId>
			<artifactId>disconf-client</artifactId>
		</dependency>
		<!-- dubbo -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
		</dependency>
		<dependency>
			<groupId>info.yangguo</groupId>
			<artifactId>perseus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>com.xbniao</groupId>
			<artifactId>bird</artifactId>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.xbniao</groupId>
			<artifactId>lang-pk-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
		</dependency>
		<!-- 处理日志 jar冲突问题 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>logback-classic</artifactId>
					<groupId>ch.qos.logback</groupId>
				</exclusion>
				<exclusion>
					<artifactId>log4j-over-slf4j</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>
    </dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Brixton.SR7</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>env/**</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources/env/${env}</directory>
				<targetPath>${project.build.outputDirectory}</targetPath>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>*.xml</exclude>
						<exclude>*.properties</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.10</version>
				<configuration>
					<repositoryLayout>flat</repositoryLayout>
					<repositoryName>lib</repositoryName>
					<configurationDirectory>conf</configurationDirectory>
					<copyConfigurationDirectory>true</copyConfigurationDirectory>
					<configurationSourceDirectory>src/main/resources/env/${env}</configurationSourceDirectory>
					<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
					<target>${project.build.directory}</target>
					<daemons>
						<daemon>
							<id>${project.name}</id>
							<mainClass>com.xbniao.Application</mainClass>
							<platforms>
								<platform>jsw</platform>
							</platforms>
							<wrapperLogFile>logs/${project.name}.log</wrapperLogFile>
							<generatorConfigurations>
								<generatorConfiguration>
									<generator>jsw</generator>
									<includes>
										<include>macosx-universal-64</include>
										<include>linux-x86-32</include>
										<include>linux-x86-64</include>
										<include>windows-x86-32</include>
										<include>windows-x86-64</include>
									</includes>
									<configuration>
										<property>
											<name>configuration.directory.in.classpath.first</name>
											<value>conf</value>
										</property>
										<property>
											<name>set.default.REPO_DIR</name>
											<value>lib</value>
										</property>
										<property>
											<name>wrapper.ping.timeout</name>
											<value>300</value>
										</property>
										<property>
											<name>wrapper.startup.timeout</name>
											<value>300</value>
										</property>
									</configuration>
								</generatorConfiguration>
							</generatorConfigurations>
							<jvmSettings>
								<initialMemorySize>${jvmSettings.initialMemorySize}</initialMemorySize>
								<maxMemorySize>${jvmSettings.maxMemorySize}</maxMemorySize>
								<extraArguments>
									<!-- <extraArgument>-server</extraArgument> -->
									<extraArgument>${jvmSettings.minPermSize}</extraArgument>
									<extraArgument>${jvmSettings.maxPermSize}</extraArgument>
									<!-- <extraArgument>${jvmSettings.javaagent}</extraArgument> -->
									<!-- <extraArgument>-Dpinpoint.agentId=${jvmSettings.agentId}</extraArgument> -->
									<!-- <extraArgument>-Dpinpoint.applicationName=${jvmSettings.agentApplicationName}</extraArgument> -->
								</extraArguments>
							</jvmSettings>
						</daemon>
					</daemons>
				</configuration>
				<executions>
					<execution>
						<id>generate-jsw-scripts</id>
						<phase>package</phase>
						<goals>
							<goal>generate-daemons</goal>
							<goal>create-repository</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptor>assembly/bin.xml</descriptor>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<configuration>
					<!--检查 -->
					<check>
						<!--每个类的分支覆盖率 -->
						<branchRate>5</branchRate>
						<!--每个类的代码行覆盖率 -->
						<lineRate>10</lineRate>
						<!--校验失败则中止.即为true时如果校验失败则打包执行失败,反之则只是打出告警日志 -->
						<haltOnFailure>false</haltOnFailure>
						<!--整体的分支覆盖率 -->
						<totalBranchRate>5</totalBranchRate>
						<!--整体的代码行覆盖率 -->
						<totalLineRate>5</totalLineRate>
						<!--每个包的分支行覆盖率 -->
						<packageBranchRate>5</packageBranchRate>
						<!--每个包的代码行覆盖率 -->
						<packageLineRate>5</packageLineRate>
						<regexes>
							<!--通过表达式设定覆盖率伐值 -->
							<regex>
								<pattern>com.xbniao.*</pattern>
								<branchRate>5</branchRate>
								<lineRate>10</lineRate>
							</regex>
						</regexes>
					</check>
					<formats>
						<!--生产报表格式 -->
						<format>html</format>
						<format>xml</format>
					</formats>
					<!--设置为true 表示生产多模块项目报表 -->
					<!--<aggregate>true</aggregate> -->
					<instrumentation></instrumentation>
				</configuration>
				<executions>
					<!--默认<check/>这个校验是需要单独敲命令的,当然可以根据实际需要,在execution里配置goal和phase来完成命令的绑定.比如在打包前做校验,可以这么配置execution -->
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>check</goal>
							<goal>cobertura</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
